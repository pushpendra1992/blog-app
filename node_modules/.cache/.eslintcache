[{"/home/kumar/conduit-app/src/index.js":"1","/home/kumar/conduit-app/src/components/Header.js":"2","/home/kumar/conduit-app/src/App.js":"3","/home/kumar/conduit-app/src/components/Home.js":"4","/home/kumar/conduit-app/src/components/Signin.js":"5","/home/kumar/conduit-app/src/components/Article.js":"6","/home/kumar/conduit-app/src/components/Tags.js":"7","/home/kumar/conduit-app/src/components/Signup.js":"8"},{"size":220,"mtime":1614497048863,"results":"9","hashOfConfig":"10"},{"size":1468,"mtime":1614495394790,"results":"11","hashOfConfig":"10"},{"size":756,"mtime":1614496014585,"results":"12","hashOfConfig":"10"},{"size":2351,"mtime":1614495466415,"results":"13","hashOfConfig":"10"},{"size":3616,"mtime":1614495542815,"results":"14","hashOfConfig":"10"},{"size":2236,"mtime":1614495439219,"results":"15","hashOfConfig":"10"},{"size":773,"mtime":1614495640420,"results":"16","hashOfConfig":"10"},{"size":4477,"mtime":1614497001985,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hbmbxr",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kumar/conduit-app/src/index.js",[],"/home/kumar/conduit-app/src/components/Header.js",["39","40"],"\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { Divider, Button, ButtonGroup, Container } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#757ce8\",\n      main: \"#ffff00\",\n      dark: \"#002884\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nfunction Header(props) {\n  const { loggedInUser } = props;\n  console.log(loggedInUser);\n  return (\n    <header>\n      <AppBar position=\"static\" color=\"primary\">\n        <Container>\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Typography variant=\"h5\">Conduit</Typography>\n            <ButtonGroup disableElevation variant=\"\" color=\"primary\">\n              <Button href=\"/\">Home</Button>\n              {loggedInUser ? (\n                <Button href=\"/user\">{loggedInUser.username}</Button>\n              ) : (\n                <div className=\"login\">\n                  <Button href=\"/signin\">Sign In</Button>\n                  <Button href=\"/signup\">Sign Up</Button>\n                </div>\n              )}\n            </ButtonGroup>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </header>\n  );\n}\n\nexport default Header;",["41","42"],"/home/kumar/conduit-app/src/App.js",[],"/home/kumar/conduit-app/src/components/Home.js",["43","44"],"import {\n    CardContent,\n    CardHeader,\n    Container,\n    Typography,\n    Button,\n    Card,\n    CardActions,\n    CardMedia,\n  } from \"@material-ui/core\";\n  import React from \"react\";\n  import Loader from \"react-loader-spinner\";\n  import Tags from \"../components/Tags\";\n  \n  class Home extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        articles: \"\",\n        tag: \"\",\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"/api/articles\")\n        .then((data) => data.json())\n        .then((articles) =>\n          this.setState(\n            {\n              articles: articles.articles,\n            },\n            () => console.log(this.state.articles)\n          )\n        );\n    }\n    render() {\n      const { articles } = this.state;\n      console.log(this.state.loggedInUser);\n      if (!articles) return <Loader type=\"Bars\" color=\"\"></Loader>;\n      return (\n        <main>\n          <Container style={{ display: \"flex\" }}>\n            <div className=\"articles\">\n              {articles.map((article) => {\n                return (\n                  <article\n                    style={{\n                      padding: \"15px\",\n                    }}\n                  >\n                    <Card style={{ style: \"flex\" }}>\n                      <CardHeader>\n                        <img src=\"https://unsplash.com/photos/dTQySHC4uxM\"></img>\n                      </CardHeader>\n                      <CardContent>\n                        <Typography variant=\"h6\">{article.title}</Typography>\n                        <Typography variant=\"p\">{article.body}</Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Button size=\"small\" color=\"primary\">\n                          Share\n                        </Button>\n                        <Button\n                          size=\"small\"\n                          color=\"primary\"\n                          href={`/api/articles/${article.slug}`}\n                        >\n                          Learn More\n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </article>\n                );\n              })}\n            </div>\n            <Tags />\n          </Container>\n        </main>\n      );\n    }\n  }\n  \n  export default Home;","/home/kumar/conduit-app/src/components/Signin.js",["45"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      //userIsLoggedIn: true,\n    };\n  }\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => console.log(this.state)\n    );\n  };\n\n  validate = (field) => {};\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    let userInfo = {};\n    fetch(\"/api/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: {\n          email: email,\n          password: password,\n        },\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json.user);\n        localStorage.setItem(\"user\", JSON.stringify(json.user));\n      });\n  };\n  render() {\n    let isUserLoggedIn = localStorage.getItem(\"user\");\n    if (isUserLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div>\n          <Avatar>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={this.changeHandler}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.changeHandler}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.submitHandler}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default SignIn;","/home/kumar/conduit-app/src/components/Article.js",["46","47"],"import {\n    Container,\n    TextareaAutosize,\n    Typography,\n    Paper,\n    Grid,\n    Divider,\n    Avatar,\n  } from \"@material-ui/core\";\n  import React from \"react\";\n  import Loader from \"react-loader-spinner\";\n  \n  class Article extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        article: \"\",\n        comments: [1, 2, 3],\n      };\n    }\n  \n    componentDidMount() {\n      let slug = this.props.match.params.slug;\n      let requests = [`/api/articles/${slug}`, `/api/articles/${slug}/comments`];\n      Promise.all(requests.map((request) => fetch(request)))\n        .then((data) => data.map((data) => data.json()))\n        .then((jsonData) => console.log(jsonData));\n    }\n  \n    render() {\n      const { article } = this.state;\n      let comments = [1, 2, 3];\n      console.log(article, this.state.comments);\n      if (!article || !comments) {\n        return (\n          <Loader\n            type=\"Bars\"\n            color=\"#00BFFF\"\n            height={50}\n            width={50}\n            timeout={3000} //3 secs\n          />\n        );\n      }\n      return (\n        <Container>\n          <article>\n            <Typography variant=\"h1\">{article.title}</Typography>\n            <Typography variant=\"p\">{article.body}</Typography>\n          </article>\n          <div className=\"comments\">\n            {}\n            <h1>Comments</h1>\n            {comments.map((comment) => (\n              <Paper style={{ padding: \"40px 20px\" }}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item>\n                    <Avatar alt=\"Remy Sharp\" src=\"##\" />\n                  </Grid>\n                  <Grid justifyContent=\"left\" item xs zeroMinWidth>\n                    <h4 style={{ margin: 0, textAlign: \"left\" }}></h4>\n                    <p style={{ textAlign: \"left\" }}></p>\n                    <p style={{ textAlign: \"left\", color: \"gray\" }}>\n                      posted 1 minute ago\n                    </p>\n                  </Grid>\n                </Grid>\n                <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} />\n              </Paper>\n            ))}\n          </div>\n        </Container>\n      );\n    }\n  }\n  \n  export default Article;","/home/kumar/conduit-app/src/components/Tags.js",[],"/home/kumar/conduit-app/src/components/Signup.js",["48","49","50","51"],{"ruleId":"52","severity":1,"message":"53","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":9,"column":7,"nodeType":"54","messageId":"55","endLine":9,"endColumn":12},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"52","severity":1,"message":"61","line":9,"column":5,"nodeType":"54","messageId":"55","endLine":9,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":53,"column":25,"nodeType":"64","endLine":53,"endColumn":76},{"ruleId":"52","severity":1,"message":"65","line":41,"column":9,"nodeType":"54","messageId":"55","endLine":41,"endColumn":17},{"ruleId":"52","severity":1,"message":"66","line":3,"column":5,"nodeType":"54","messageId":"55","endLine":3,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":61,"column":21,"nodeType":"64","endLine":61,"endColumn":66},{"ruleId":"52","severity":1,"message":"69","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":24},{"ruleId":"52","severity":1,"message":"70","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":16},{"ruleId":"52","severity":1,"message":"71","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":11},{"ruleId":"52","severity":1,"message":"72","line":16,"column":7,"nodeType":"54","messageId":"55","endLine":16,"endColumn":16},"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userInfo' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]