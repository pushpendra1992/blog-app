{"ast":null,"code":"var _jsxFileName = \"/home/kumar/conduit-app/src/components/Article.js\";\nimport { Container, TextareaAutosize, Typography, Paper, Grid, Divider, Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      article: \"\",\n      comments: [1, 2, 3]\n    };\n  }\n\n  componentDidMount() {\n    let slug = this.props.match.params.slug;\n    let requests = [`/api/articles/${slug}`, `/api/articles/${slug}/comments`];\n    Promise.all(requests.map(request => fetch(request))).then(data => data.map(data => data.json())).then(jsonData => console.log(jsonData));\n  }\n\n  render() {\n    const {\n      article\n    } = this.state;\n    let comments = [1, 2, 3];\n    console.log(article, this.state.comments);\n\n    if (!article || !comments) {\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Bars\",\n        color: \"#00BFFF\",\n        height: 50,\n        width: 50,\n        timeout: 3000 //3 secs\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          children: article.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            padding: \"40px 20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            wrap: \"nowrap\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: \"##\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              justifyContent: \"left\",\n              item: true,\n              xs: true,\n              zeroMinWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  margin: 0,\n                  textAlign: \"left\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: \"left\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: \"left\",\n                  color: \"gray\"\n                },\n                children: \"posted 1 minute ago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\",\n            style: {\n              margin: \"30px 0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Article;","map":{"version":3,"sources":["/home/kumar/conduit-app/src/components/Article.js"],"names":["Container","TextareaAutosize","Typography","Paper","Grid","Divider","Avatar","React","Loader","Article","Component","constructor","props","state","article","comments","componentDidMount","slug","match","params","requests","Promise","all","map","request","fetch","then","data","json","jsonData","console","log","render","title","body","comment","padding","margin","textAlign","color"],"mappings":"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","sourcesContent":["import {\n    Container,\n    TextareaAutosize,\n    Typography,\n    Paper,\n    Grid,\n    Divider,\n    Avatar,\n  } from \"@material-ui/core\";\n  import React from \"react\";\n  import Loader from \"react-loader-spinner\";\n  \n  class Article extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        article: \"\",\n        comments: [1, 2, 3],\n      };\n    }\n  \n    componentDidMount() {\n      let slug = this.props.match.params.slug;\n      let requests = [`/api/articles/${slug}`, `/api/articles/${slug}/comments`];\n      Promise.all(requests.map((request) => fetch(request)))\n        .then((data) => data.map((data) => data.json()))\n        .then((jsonData) => console.log(jsonData));\n    }\n  \n    render() {\n      const { article } = this.state;\n      let comments = [1, 2, 3];\n      console.log(article, this.state.comments);\n      if (!article || !comments) {\n        return (\n          <Loader\n            type=\"Bars\"\n            color=\"#00BFFF\"\n            height={50}\n            width={50}\n            timeout={3000} //3 secs\n          />\n        );\n      }\n      return (\n        <Container>\n          <article>\n            <Typography variant=\"h1\">{article.title}</Typography>\n            <Typography variant=\"p\">{article.body}</Typography>\n          </article>\n          <div className=\"comments\">\n            {}\n            <h1>Comments</h1>\n            {comments.map((comment) => (\n              <Paper style={{ padding: \"40px 20px\" }}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item>\n                    <Avatar alt=\"Remy Sharp\" src=\"##\" />\n                  </Grid>\n                  <Grid justifyContent=\"left\" item xs zeroMinWidth>\n                    <h4 style={{ margin: 0, textAlign: \"left\" }}></h4>\n                    <p style={{ textAlign: \"left\" }}></p>\n                    <p style={{ textAlign: \"left\", color: \"gray\" }}>\n                      posted 1 minute ago\n                    </p>\n                  </Grid>\n                </Grid>\n                <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} />\n              </Paper>\n            ))}\n          </div>\n        </Container>\n      );\n    }\n  }\n  \n  export default Article;"]},"metadata":{},"sourceType":"module"}